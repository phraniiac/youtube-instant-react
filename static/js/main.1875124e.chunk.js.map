{"version":3,"sources":["logo.svg","components/SearchBar/SearchBar.js","utils/SearchYoutube.js","components/VideoEle/VideoEleStyles.js","components/VideoEle/VideoEle.js","components/VideoList/VideoListStyles.js","components/VideoList/VideoList.js","AppStyles.js","components/VideoPlayer/VideoPlayerStyles.js","components/VideoPlayer/VideoPlayer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","SearchBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","searchYoutube","term","searchVideos","handleChange","e","newQuery","target","value","setState","query","state","bind","assertThisInitialized","react_default","a","createElement","TextField_default","id","label","onChange","margin","variant","React","Component","YoutubeApi","videoSearch","callback","YTSearch","key","videos","styles","theme","card","display","width","height","details","flexDirection","content","flex","cover","minWidth","maxWidth","controls","alignItems","paddingLeft","spacing","unit","paddingBottom","playIcon","VideoEle","handleOnClick","onClick","video","classes","Card_default","className","CardMedia_default","image","snippet","thumbnails","default","url","title","CardContent_default","Typography_default","component","color","description","withStyles","videoList","videoEle","VideoList","handleVideoSelection","selectedVideo","_this2","map","components_VideoEle_VideoEle","root","flexGrow","paper","padding","textAlign","palette","text","secondary","VideoPlayer","videoUrl","videoId","frameBorder","allowFullScreen","src","App","setVideoState","handleSearch","YoutubeAPI","Fragment","CssBaseline_default","Grid_default","container","item","xs","components_SearchBar_SearchBar","components_VideoPlayer_VideoPlayer","index_es","components_VideoList_VideoList","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1875124e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport TextField from '@material-ui/core/TextField'\n\nclass SearchBar extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            query: \"Search for Video\"\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    searchYoutube = (term) => {\n        this.props.searchVideos(term);\n    }\n\n    handleChange = (e) => {\n        const newQuery = e.target.value;\n        this.setState({query: newQuery});\n        this.searchYoutube(newQuery);\n    }\n\n    render() {\n        // const classes = this.props.classes;\n        return (\n            <div>\n                <TextField\n                    id=\"outlined-name\"\n                    label=\"Name\"\n                    // className={classes.textField}\n                    value={this.state.query}\n                    onChange={this.handleChange}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    />\n                <p>{this.state.query}</p>\n            </div>\n        )\n    }\n}\n\nexport default SearchBar;\n","import YTSearch from 'youtube-api-search';\n\n\nconst API_KEY = \"AIzaSyAAv7C7URXnHF0E2BPCIf_nRtveowe43uQ\";\n\nconst YoutubeApi = {\n\n    videoSearch : (term, callback) => {\n        // YTSearch\n        YTSearch({key : API_KEY, term: term}, (videos) => callback(videos))\n    }\n\n}\n\nexport default YoutubeApi;","const styles = theme => ({\n  card: {\n    display: 'flex',\n    width: 600,\n    height: 150,\n    margin: 5\n  },\n  details: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  content: {\n    flex: '1 0 auto',\n  },\n  cover: {\n    minWidth: 200,\n    maxWidth: 200\n  },\n  controls: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingLeft: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n  },\n  playIcon: {\n    height: 38,\n    width: 38,\n  },\n});\n\nexport default styles;","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport Typography from '@material-ui/core/Typography';\nimport styles from './VideoEleStyles';\nimport { withStyles } from '@material-ui/core/styles';\n\n\nclass VideoEle extends React.Component {\n\n    handleOnClick = e => {\n        this.props.onClick(this.props.video);\n    }\n\n    render() {\n        const classes = this.props.classes;\n        return (\n            <Card onClick={this.handleOnClick} className={classes.card}>\n                <CardMedia\n                    className={classes.cover}\n                    image={this.props.video.snippet.thumbnails.default.url}\n                    title={this.props.video.snippet.title}\n                />\n                <div className={classes.details}>\n                    <CardContent className={classes.content}>\n                    <Typography component=\"h2\" variant=\"headline\">\n                        {this.props.video.snippet.title}\n                    </Typography>\n                    <Typography variant=\"subheading\" color=\"textSecondary\">\n                        {this.props.video.snippet.description}\n                    </Typography>\n                    </CardContent>\n                </div>\n            </Card>\n        )\n    }\n}\n\nexport default withStyles(styles)(VideoEle);","const styles = theme => ({\n    videoList: {\n        margin: 10\n    },\n    videoEle: {\n        margin: 10\n    }\n  });\n\nexport default styles;\n","import React from 'react';\nimport VideoEle from '../VideoEle/VideoEle';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './VideoListStyles';\n\nclass VideoList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            selectedVideo: {}\n        }\n\n        this.handleVideoSelection = this.handleVideoSelection.bind(this);\n    }\n\n    handleVideoSelection = video => {\n        this.setState({selectedVideo: video});\n        this.props.handleVideoSelection(video);\n    }\n\n    render() {\n        const classes = this.props.classes;\n\n        return (\n            \n            <div className={classes.videoList}>\n                {\n                    this.props.videoList.map(\n                        video => <VideoEle onClick={this.handleVideoSelection} video={video} />\n                    )\n                }\n            </div>\n        )\n    }\n\n}\n\nexport default withStyles(styles)(VideoList);","const styles = theme => ({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing.unit * 2,\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n  });\n\n  export default styles;","const styles = theme => ({\n\n})\n\nexport default styles;","import React from 'react';\nimport styles from './VideoPlayerStyles';\nimport withStyles from '@material-ui/core/styles/withStyles'\n\nclass VideoPlayer extends React.Component {\n\n    render() {\n        const classes = this.props.classes;\n        let videoUrl = \"\"\n        let videoId = \"\"\n        if(this.props.video.id) {\n            videoId = this.props.video.id.videoId;\n            videoUrl = \"http://youtube.com/embed/\" + this.props.video.id.videoId;\n        }\n        return (\n            <div>\n                <iframe \n                    width=\"640\" \n                    height=\"360\"\n                    frameBorder=\"0\"\n                    allowFullScreen\n                    title=\"a\"\n                    src={videoUrl}\n                    >\n                </iframe>\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(VideoPlayer);","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Menu from '@material-ui/core/Menu';\nimport SearchBar from './components/SearchBar/SearchBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport YoutubeAPI from './utils/SearchYoutube';\nimport { withStyles } from '@material-ui/core/styles';\nimport VideoList from './components/VideoList/VideoList';\nimport Grid from '@material-ui/core/Grid';\nimport styles from './AppStyles';\nimport Paper from '@material-ui/core/Paper';\nimport { Typography } from '@material-ui/core';\nimport VideoPlayer from './components/VideoPlayer/VideoPlayer';\n\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      videoList : [],\n      selectedVideo : {}\n    }\n\n    this.handleSearch = this.handleSearch.bind(this);\n    this.setVideoState = this.setVideoState.bind(this);\n    this.handleVideoSelection = this.handleVideoSelection.bind(this);\n  }\n\n  setVideoState = (videos) => { \n    this.setState({videoList: videos})\n    this.setState({selectedVideo: videos[0]})\n  };\n\n  handleSearch = (term) => {\n    YoutubeAPI.videoSearch(term, this.setVideoState);    \n  }\n\n  handleVideoSelection = (video) => this.setState({selectedVideo: video});\n\n  render() {\n    const classes = this.props.classes;\n    return (\n      <React.Fragment>\n        <CssBaseline>\n        <div className={classes.root}>\n          <Grid container>\n            <Grid item xs={12}>\n              <SearchBar searchVideos={this.handleSearch}/>\n            </Grid>\n            <Grid item xs={8}>\n              <VideoPlayer video={this.state.selectedVideo} />\n            </Grid>\n            <Grid item xs={4}>\n              <Typography component=\"h2\" variant=\"headline\">\n                Search Results\n              </Typography>\n              <VideoList videoList={this.state.videoList} handleVideoSelection={this.handleVideoSelection}/>\n            </Grid>\n            \n          </Grid>\n        </div>\n        </CssBaseline>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}